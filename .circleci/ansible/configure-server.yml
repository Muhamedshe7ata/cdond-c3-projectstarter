---
- name: "configuration play."
  hosts: web
  user: ubuntu # Ensure this matches the SSH user you use for the instance
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - project_remote_path: "/home/ubuntu/project" # Define the path on the EC2 instance

  # Pass environment variables to Ansible tasks running on the remote host
  environment:
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    TYPEORM_PORT: 5432
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
    TYPEORM_EXTRA: "{{ lookup('env', 'TYPEORM_EXTRA') | default('') }}" # Include SSL setting

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "Install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

    # --- NEW TASKS TO COPY PROJECT CODE AND ENV FILE ---
    - name: Ensure remote project parent directory exists
      file:
        path: "{{ '/'.join(project_remote_path.split('/')[0:-1]) }}" # Create /home/ubuntu if needed
        state: directory
        owner: ubuntu # Must match the user
        group: ubuntu # Must match the user
        mode: '0755'
      become: true

    - name: Ensure remote project directory exists
      file:
        path: "{{ project_remote_path }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      become: true

    - name: Copy project code from workspace to EC2 instance
      copy:
        src: "~/project/" # Source path in the CircleCI container workspace
        dest: "{{ project_remote_path }}/" # Destination path on the EC2 instance
        owner: ubuntu # Ensure the user owns the files
        group: ubuntu # Ensure the user owns the files
        mode: '0755'
      become: true # Needed to copy into user's home if Ansible is running as root

    # Copy myenv.sh from your roles/configure-server/files/ directory
    - name: Copy environment variables script to project backend directory on EC2
      copy:
        src: myenv.sh # Source relative to roles/configure-server/files/
        dest: "{{ project_remote_path }}/backend/myenv.sh" # Copy to backend directory on EC2
        owner: ubuntu
        group: ubuntu
        mode: '0644' # Standard file permissions
      become: true
    # --- END NEW TASKS ---

  # ... rest of your playbook ...
  roles:
    - configure-server # This role might install nodejs, pm2, etc. Ensure it doesn't conflict
                       # with the migration commands you will run later via SSH.
# ---
# - name: "configuration play." 
#   hosts: web
#   user: ubuntu
#   become: true
#   become_method: sudo
#   become_user: root  
#   gather_facts: false
#   vars:
#     - ansible_python_interpreter: /usr/bin/python3
#     - ansible_host_key_checking: false
#     - ansible_stdout_callback: yaml

#   pre_tasks:
#     - name: "wait 600 seconds for target connection to become reachable/usable."
#       wait_for_connection:
#         timeout: 600
        

#     - name: "Install python for Ansible."
#       # Your code here
#       become: true
#       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
#       changed_when: false
#   # Get the environment variables from CircleCI and add to the EC2 instance
#   environment:
#       - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
#       - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
#       - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
#       - TYPEORM_PORT: 5432
#       - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
#       - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
#       - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
#       - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
#       - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

#   roles:
#     - configure-server